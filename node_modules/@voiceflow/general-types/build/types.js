"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpressionTypeV2 = exports.ExpressionType = exports.ButtonsLayout = exports.CanvasNodeVisibility = exports.ButtonType = exports.Voice = exports.Language = exports.Locale = void 0;
var Locale;
(function (Locale) {
    // English
    Locale["EN_US"] = "en-US";
    // Arabic
    Locale["AR_AR"] = "ar-AR";
    // Chinese
    Locale["ZH_CN"] = "zh-CN";
    // Dutch
    Locale["NL_NL"] = "nl-NL";
    // French
    Locale["FR_FR"] = "fr-FR";
    Locale["FR_CA"] = "fr-CA";
    // German
    Locale["DE_DE"] = "de-DE";
    // Gujarati
    Locale["GU_IN"] = "gu-IN";
    // Hindi
    Locale["HI_IN"] = "hi-IN";
    // Italian
    Locale["IT_IT"] = "it-IT";
    // Japanese
    Locale["JA_JP"] = "ja-JP";
    // Korean
    Locale["KO_KR"] = "ko-KR";
    // Marathi
    Locale["MR_IN"] = "mr-IN";
    // Portugese
    Locale["PT_BR"] = "pt-BR";
    // Spanish
    Locale["ES_ES"] = "es-ES";
    Locale["ES_MX"] = "es-MX";
    // Tamil
    Locale["TA_IN"] = "ta-IN";
    // Telugu
    Locale["TE_IN"] = "te-IN";
    // Turkish
    Locale["TR_TR"] = "tr-TR";
})(Locale = exports.Locale || (exports.Locale = {}));
var Language;
(function (Language) {
    // English
    Language["EN"] = "en";
    // Arabic
    Language["AR"] = "ar";
    // Chinese
    Language["ZH"] = "zh";
    // Dutch
    Language["NL"] = "nl";
    // French
    Language["FR"] = "fr";
    // German
    Language["DE"] = "de";
    // Gujarati
    Language["GU"] = "gu";
    // Hindi
    Language["HI"] = "hi";
    // Italian
    Language["IT"] = "it";
    // Japanese
    Language["JA"] = "ja";
    // Korean
    Language["KO"] = "ko";
    // Marathi
    Language["MR"] = "mr";
    // Portugese
    Language["PT"] = "pt";
    // Spanish
    Language["ES"] = "es";
    // Tamil
    Language["TA"] = "ta";
    // Telugu
    Language["TE"] = "te";
    // Turkish
    Language["TR"] = "tr";
})(Language = exports.Language || (exports.Language = {}));
var Voice;
(function (Voice) {
    Voice["AUDIO"] = "audio";
    Voice["DEFAULT"] = "default";
})(Voice = exports.Voice || (exports.Voice = {}));
var ButtonType;
(function (ButtonType) {
    ButtonType["INTENT"] = "INTENT";
})(ButtonType = exports.ButtonType || (exports.ButtonType = {}));
var CanvasNodeVisibility;
(function (CanvasNodeVisibility) {
    CanvasNodeVisibility["PREVIEW"] = "preview";
    CanvasNodeVisibility["ALL_VARIANTS"] = "all-variants";
})(CanvasNodeVisibility = exports.CanvasNodeVisibility || (exports.CanvasNodeVisibility = {}));
var ButtonsLayout;
(function (ButtonsLayout) {
    ButtonsLayout["STACKED"] = "stacked";
    ButtonsLayout["CAROUSEL"] = "carousel";
})(ButtonsLayout = exports.ButtonsLayout || (exports.ButtonsLayout = {}));
var ExpressionType;
(function (ExpressionType) {
    ExpressionType["EQUALS"] = "equals";
    ExpressionType["GREATER"] = "greater";
    ExpressionType["LESS"] = "less";
    ExpressionType["AND"] = "and";
    ExpressionType["OR"] = "or";
    ExpressionType["VALUE"] = "value";
    ExpressionType["VARIABLE"] = "variable";
    ExpressionType["ADVANCE"] = "advance";
    // soon to be deprecated
    ExpressionType["PLUS"] = "plus";
    ExpressionType["MINUS"] = "minus";
    ExpressionType["TIMES"] = "times";
    ExpressionType["DIVIDE"] = "divide";
    ExpressionType["NOT"] = "not";
})(ExpressionType = exports.ExpressionType || (exports.ExpressionType = {}));
// new types
var ExpressionTypeV2;
(function (ExpressionTypeV2) {
    ExpressionTypeV2["EQUALS"] = "equals";
    ExpressionTypeV2["GREATER"] = "greater";
    ExpressionTypeV2["LESS"] = "less";
    ExpressionTypeV2["AND"] = "and";
    ExpressionTypeV2["OR"] = "or";
    ExpressionTypeV2["VALUE"] = "value";
    ExpressionTypeV2["VARIABLE"] = "variable";
    ExpressionTypeV2["ADVANCE"] = "advance";
    ExpressionTypeV2["NOT_EQUAL"] = "not_equal";
    ExpressionTypeV2["GREATER_OR_EQUAL"] = "greater_or_equal";
    ExpressionTypeV2["LESS_OR_EQUAL"] = "less_or_equal";
    ExpressionTypeV2["CONTAINS"] = "contains";
    ExpressionTypeV2["NOT_CONTAIN"] = "not_contain";
    ExpressionTypeV2["STARTS_WITH"] = "starts_with";
    ExpressionTypeV2["ENDS_WITH"] = "ends_with";
    ExpressionTypeV2["HAS_VALUE"] = "has_value";
    ExpressionTypeV2["IS_EMPTY"] = "is_empty";
})(ExpressionTypeV2 = exports.ExpressionTypeV2 || (exports.ExpressionTypeV2 = {}));
//# sourceMappingURL=types.js.map