import { Nullable } from '@voiceflow/api-sdk';
import { CanvasNodeVisibility, Locale, Prompt, Voice } from "../types";
export declare enum RepeatType {
    OFF = "OFF",
    ALL = "ALL",
    DIALOG = "DIALOG"
}
export declare enum SessionType {
    RESUME = "resume",
    RESTART = "restart"
}
export interface RestartSession {
    type: SessionType.RESTART;
}
export interface BaseResumeSession<V> {
    type: SessionType.RESUME;
    resume: Nullable<Prompt<V>>;
    follow: Nullable<Prompt<V>>;
}
export interface BaseVersionSettings<V> {
    error: Nullable<Prompt<V>>;
    repeat: RepeatType;
    session: RestartSession | BaseResumeSession<V>;
    defaultVoice: Nullable<V>;
    defaultCanvasNodeVisibility: Nullable<CanvasNodeVisibility>;
}
export declare type ResumeSession = BaseResumeSession<Voice>;
export interface GeneralVersionSettings extends BaseVersionSettings<Voice> {
    locales: Locale[];
}
export declare const defaultPrompt: <V>(prompt: Nullable<Prompt<V>> | undefined, defaultVoice: V) => Nullable<Prompt<V>>;
export declare const defaultBaseVersionSettings: <V>({ error, repeat, session, defaultVoice, defaultCanvasNodeVisibility, }: Partial<BaseVersionSettings<V>> | undefined, { defaultPromptVoice }: {
    defaultPromptVoice: V;
}) => BaseVersionSettings<V>;
export declare const defaultGeneralVersionSettings: ({ locales, ...baseSettings }?: Partial<GeneralVersionSettings>) => GeneralVersionSettings;
